{"ast":null,"code":"import axios from \"axios\";\n\n// for likepost\nexport const likePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"likeRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"likeSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"likeFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// for comments\nexport const commentOnPost = (id, comment) => async dispatch => {\n  try {\n    dispatch({\n      type: \"commentRequest\"\n    });\n    const {\n      data\n    } = await axios.put(`/api/v1/post/comment/${id}`, {\n      comment\n    }, {\n      headers: {\n        \"Content-Type\": \"Application/json\"\n      }\n    });\n    dispatch({\n      type: \"commentSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"commentFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// for deleteComment\nexport const deleteComment = (id, commentId) => async dispatch => {\n  try {\n    dispatch({\n      type: \"deleteRequest\"\n    });\n    console.log(\"sldkf\", id, commentId);\n    const {\n      data\n    } = await axios.delete(`/api/v1/post/comment/${id}`, {\n      data: {\n        commentId\n      }\n    });\n    dispatch({\n      type: \"deleteSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// for Post\nexport const createNewPost = (caption, image) => async dispatch => {\n  try {\n    dispatch({\n      type: \"newPostRequest\"\n    });\n    const {\n      data\n    } = await axios.post(`/api/v1/post/upload`, {\n      caption,\n      image\n    });\n    dispatch({\n      type: \"newPostSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"newPostFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\n\n// update Post\nexport const updateCaption = (caption, id) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateCaptionRequest\"\n    });\n    const data = await axios.put(`/api/v1/post/${id}`, {\n      caption\n    });\n    dispatch({\n      type: \"updateCaptionSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateCaptionFailure\",\n      payload: error.message\n    });\n  }\n};\n\n// delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"deletePostRequest\"\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"deletePostSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deletePostFailure\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","likePost","id","dispatch","type","data","get","payload","message","error","response","commentOnPost","comment","put","headers","deleteComment","commentId","console","log","delete","createNewPost","caption","image","post","updateCaption","deletePost"],"sources":["C:/MERN/Social_media/frontend/src/Actions/Post.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// for likepost\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"likeRequest\",\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/v1/post/${id}`);\r\n\r\n    dispatch({\r\n      type: \"likeSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"likeFailure\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// for comments\r\nexport const commentOnPost = (id, comment) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"commentRequest\",\r\n    });\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/post/comment/${id}`,\r\n      { comment },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: \"commentSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"commentFailure\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// for deleteComment\r\nexport const deleteComment = (id, commentId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"deleteRequest\",\r\n    });\r\n\r\n    console.log(\"sldkf\", id, commentId);\r\n    const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\r\n      data: { commentId },\r\n    });\r\n\r\n    dispatch({\r\n      type: \"deleteSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"deleteFailure\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// for Post\r\nexport const createNewPost = (caption, image) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"newPostRequest\",\r\n    });\r\n\r\n    const { data } = await axios.post(`/api/v1/post/upload`, {\r\n      caption,\r\n      image,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"newPostSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"newPostFailure\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update Post\r\nexport const updateCaption = (caption, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"updateCaptionRequest\",\r\n    });\r\n\r\n    const data = await axios.put(`/api/v1/post/${id}`, {\r\n      caption,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"updateCaptionSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"updateCaptionFailure\",\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// delete Post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"deletePostRequest\",\r\n    });\r\n\r\n    const { data } = await axios.delete(`/api/v1/post/${id}`);\r\n\r\n    dispatch({\r\n      type: \"deletePostSuccess\",\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"deletePostFailure\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,gBAAeJ,EAAG,EAAC,CAAC;IAEtDC,QAAQ,CAAC;MACPC,IAAI,EAAE,aAAa;MACnBG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,aAAa;MACnBG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAGA,CAACT,EAAE,EAAEU,OAAO,KAAK,MAAOT,QAAQ,IAAK;EAChE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACa,GAAG,CAC7B,wBAAuBX,EAAG,EAAC,EAC5B;MAAEU;IAAQ,CAAC,EACX;MACEE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CACF;IAEDX,QAAQ,CAAC;MACPC,IAAI,EAAE,gBAAgB;MACtBG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,gBAAgB;MACtBG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,aAAa,GAAGA,CAACb,EAAE,EAAEc,SAAS,KAAK,MAAOb,QAAQ,IAAK;EAClE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEFa,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEhB,EAAE,EAAEc,SAAS,CAAC;IACnC,MAAM;MAAEX;IAAK,CAAC,GAAG,MAAML,KAAK,CAACmB,MAAM,CAAE,wBAAuBjB,EAAG,EAAC,EAAE;MAChEG,IAAI,EAAE;QAAEW;MAAU;IACpB,CAAC,CAAC;IAEFb,QAAQ,CAAC;MACPC,IAAI,EAAE,eAAe;MACrBG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,eAAe;MACrBG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,aAAa,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK,MAAOnB,QAAQ,IAAK;EACnE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACuB,IAAI,CAAE,qBAAoB,EAAE;MACvDF,OAAO;MACPC;IACF,CAAC,CAAC;IAEFnB,QAAQ,CAAC;MACPC,IAAI,EAAE,gBAAgB;MACtBG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,gBAAgB;MACtBG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,aAAa,GAAGA,CAACH,OAAO,EAAEnB,EAAE,KAAK,MAAOC,QAAQ,IAAK;EAChE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAML,KAAK,CAACa,GAAG,CAAE,gBAAeX,EAAG,EAAC,EAAE;MACjDmB;IACF,CAAC,CAAC;IAEFlB,QAAQ,CAAC;MACPC,IAAI,EAAE,sBAAsB;MAC5BG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,sBAAsB;MAC5BG,OAAO,EAAEE,KAAK,CAACD;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,UAAU,GAAIvB,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,KAAK,CAACmB,MAAM,CAAE,gBAAejB,EAAG,EAAC,CAAC;IAEzDC,QAAQ,CAAC;MACPC,IAAI,EAAE,mBAAmB;MACzBG,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAE,mBAAmB;MACzBG,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}