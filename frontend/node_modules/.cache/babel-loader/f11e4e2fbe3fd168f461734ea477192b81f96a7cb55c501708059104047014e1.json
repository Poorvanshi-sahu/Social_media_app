{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\Social_media\\\\frontend\\\\src\\\\Components\\\\Newpost\\\\Newpost.js\",\n  _s = $RefreshSig$();\nimport { Button, Typography } from '@mui/material';\nimport './Newpost.css';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { createNewPost } from '../../Actions/Post';\nimport { loadUser } from '../../Actions/Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newpost = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const {\n    loading,\n    error,\n    message\n  } = useSelector(state => state.like);\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const handleImage = e => {\n    const files = e.target.files[0];\n    const Reader = new FileReader();\n    Reader.readAsDataURL(files);\n    Reader.onload = e => {\n      if (Reader.readyState === 2) {\n        setImage(Reader.result);\n      }\n    };\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    await dispatch(createNewPost(caption, image));\n    dispatch(loadUser());\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch({\n        type: \"clearErrors\"\n      });\n    }\n    if (message) {\n      alert.success(message);\n      dispatch({\n        type: 'clearMessage'\n      });\n      setImage(null);\n      setCaption(\"\");\n    }\n  }, [dispatch, error, message, alert]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newPost\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPostForm\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          alignSelf: 'center',\n          margin: '2vmax',\n          fontWeight: 300\n        },\n        variant: \"h4\",\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        placeholder: \"uploadfile\",\n        onChange: handleImage,\n        id: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"caption...\",\n        value: caption,\n        onChange: e => setCaption(e.target.value),\n        id: \"caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Newpost, \"LEtLZ/N8JfRMNFF6gflabZ9bbFE=\", false, function () {\n  return [useSelector, useAlert, useDispatch];\n});\n_c = Newpost;\nexport default Newpost;\nvar _c;\n$RefreshReg$(_c, \"Newpost\");","map":{"version":3,"names":["Button","Typography","React","useEffect","useState","useDispatch","useSelector","useAlert","createNewPost","loadUser","jsxDEV","_jsxDEV","Newpost","_s","image","setImage","caption","setCaption","loading","error","message","state","like","alert","dispatch","handleImage","e","files","target","Reader","FileReader","readAsDataURL","onload","readyState","result","submitHandler","preventDefault","type","success","className","children","onSubmit","style","alignSelf","margin","fontWeight","variant","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","accept","placeholder","onChange","id","value","disabled","_c","$RefreshReg$"],"sources":["C:/MERN/Social_media/frontend/src/Components/Newpost/Newpost.js"],"sourcesContent":["import { Button, Typography } from '@mui/material';\r\nimport './Newpost.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\nimport { createNewPost } from '../../Actions/Post';\r\nimport { loadUser } from '../../Actions/Users';\r\n\r\nconst Newpost = () => {\r\n\r\n  const [image,setImage]=useState(null);\r\n  const [caption,setCaption]=useState(\"\");\r\n  const {loading,error,message}=useSelector((state)=>state.like);\r\n  const alert=useAlert();\r\n  const dispatch=useDispatch();\r\n  \r\n  const handleImage =(e)=>{\r\n        const files=e.target.files[0]\r\n\r\n        const Reader= new FileReader();\r\n\r\n        Reader.readAsDataURL(files);\r\n\r\n        Reader.onload=(e)=>{\r\n             if(Reader.readyState===2){\r\n                 setImage(Reader.result)\r\n             }\r\n        }\r\n       \r\n  }\r\n  \r\n  const submitHandler=async(e)=>{\r\n       e.preventDefault();\r\n       await dispatch(createNewPost(caption,image));\r\n       dispatch(loadUser())\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(error){\r\n          alert.error(error); \r\n          dispatch({\r\n            type:\"clearErrors\"\r\n          })\r\n      }\r\n\r\n      if(message){\r\n        alert.success(message)\r\n        dispatch({\r\n          type:'clearMessage'\r\n        })\r\n        setImage(null)\r\n        setCaption(\"\")\r\n      }\r\n  },[dispatch,error,message,alert])\r\n  \r\n \r\n  return (\r\n    <div className='newPost'>\r\n         <form className='newPostForm' onSubmit={submitHandler}>\r\n                 <Typography style={{alignSelf:'center',margin:'2vmax',fontWeight:300}} variant='h4'>New Post</Typography>\r\n                 {image && <img src={image} alt=\"post\"/>}\r\n                 <input type=\"file\" accept='image/*' placeholder='uploadfile' onChange={handleImage} id=\"image\"/>\r\n                 <input type=\"text\" placeholder='caption...' value={caption} onChange={(e)=>setCaption(e.target.value)} id=\"caption\"/>\r\n                 <Button type=\"submit\" disabled={loading}>Post</Button>\r\n         </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Newpost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}