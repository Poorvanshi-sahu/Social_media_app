{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\Social_media\\\\frontend\\\\src\\\\Components\\\\UserProfile\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\n// import { Avatar, Button, Dialog, Typography } from '@mui/material';\n// import React, { useEffect, useState } from 'react'\n// import { Link, useParams } from 'react-router-dom';\n// import Post from '../Post/Post';\n// import Loader from '../Loader/Loader';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useAlert } from 'react-alert';\n// import User from '../User/User';\n// import { getUserProfile} from '../../Actions/Users';\n\n// const UserProfile = () => {\n//   const dispatch=useDispatch();\n//   const alert=useAlert();\n\n//   const {user,loading:userloading}=useSelector(state=>state.user);\n//   const {userProfile,loading:userProfileloading}=useSelector(state=>state.like);\n//   const {loading,error,posts}=useSelector(state=>state.myPost);\n//   const {error:likeError,message,loading: deleteLoading,}=useSelector(state=>state.like);\n//   const [followersToggle,setFollowersToggle]=useState(false);\n//   const [followingToggle,setFollowingToggle]=useState(false);\n//   const [following,setFollowing]=useState(false);\n//   const [isProfile,setIsProfile]=useState(false);\n\n//   const params=useParams();\n\n//   useEffect(() => {\n//       if(user._id===params.id){\n//            setIsProfile(true)\n//       }\n\n//       dispatch(getUserProfile(params.id))\n//   }, [dispatch,user.id,params.id])\n\n//     useEffect(() => {\n//          if(error){\n//           alert.error(error);\n//           dispatch({\n//              type:\"clearErrors\"\n//           })\n//          }\n//          if(likeError){\n//             alert.error(likeError)\n//             dispatch({\n//                 type:'clearErrors'\n//             })\n//          }\n//          if(message){\n//             alert.success(message)\n//             dispatch({\n//                 type:'clearMessage'\n//             })\n//          }\n//     }, [alert,error,likeError,message,dispatch])\n\n//   return (\n//       loading===true || userloading===true?<Loader/>:(\n//         <div className='account'>\n//               <div className='accountLeft'>\n//                      {\n//                     posts && posts.length>0?posts.map((post)=>(\n//                          <Post  \n//                                 key={post._id}\n//                                 postId={post._id}\n//                                 caption={post.caption}\n//                                 postImage={post.imageUrl.url}\n//                                 likes = {post.likes}\n//                                 comments = {post.comments}\n//                                 ownerImage={post.owner.avatar.url}\n//                                 ownerName={post.owner.name}\n//                                 ownerId={post.owner._id}\n//                                 isDelete = {true}\n//                                 isAccount = {true}\n//                          />\n//                     )):<Typography variant='h6' margin='2vmax'>No posts available</Typography>\n//                   }\n//               </div>\n//               <div className='accountright'>\n//                    <Avatar src={userProfile.avatar.url}  sx={{height:\"7vmax\",width:\"7vmax\"}} marginTop={\"2vmax\"}/>\n//                    <Typography variant=\"h6\" marginTop={\"1vmax\"} color={'#3B3B3B'} marginBottom={\"2vmax\"}>{userProfile.name}</Typography>\n//                    <div className='a'>\n//                       <button onClick={()=>setFollowingToggle(!followingToggle)}>Following {user.following.length}</button>\n//                    </div>\n//                     <div className='a'>\n//                       <button onClick={()=>setFollowersToggle(!followersToggle)}>Followers {user.followers.length}</button>\n//                    </div>\n//                     <div className='a'>\n//                        Posts {userProfile.posts.length}\n//                    </div>\n//                   {\n//                     isProfile?null: <Button variant=\"contained\" onClick={()=>setFollowing(!following)} style={{backgroundColor:following?\"red\":\"\"}}>{\n//                        following?\"UnFollow\":\"Follow\"\n//                    }</Button>\n//                   }\n\n//                     {/* DialogBox for followers */}\n//                     <Dialog open={followersToggle} onClose={() => { setFollowersToggle(!followersToggle) }}>\n//                         <div className='dialogBox'>\n//                            <Typography variant='h6'>Followers</Typography>\n//                     {\n//                          user && user.followers.length>0?user.followers.map((follower)=>(\n//                               <User key={follower._id} name={follower.name} avatar={follower.avatar.url} userId={follower._id} />\n//                          )):<Typography style={{margin:'2vmax'}}>No Followers present</Typography>\n//                     }\n//                 </div>\n//             </Dialog>\n\n//              {/* DialogBox for following */}\n//                     <Dialog open={followingToggle} onClose={() => { setFollowingToggle(!followingToggle) }}>\n//                         <div className='dialogBox'>\n//                            <Typography variant='h6'>Following</Typography>\n//                     {\n//                          user && user.following.length>0?user.following.map((follow)=>(\n//                               <User key={follow._id} name={follow.name} avatar={follow.avatar.url} userId={follow._id} />\n//                          )):<Typography style={{margin:'2vmax'}}>User has not made any posts</Typography>\n//                     }\n//                 </div>\n//             </Dialog>\n//               </div>\n//         </div>\n//       )\n//   )\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport '../Account/Account.css';\nimport '../Post/Post.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LogOutUser, allUsers, deleteProfile, loadUser, myAllPosts, postOfFollowing } from '../../Actions/Users';\nimport Loader from '../Loader/Loader';\nimport Post from '../Post/Post';\nimport { Avatar, Button, Dialog, Typography } from '@mui/material';\nimport { useAlert } from 'react-alert';\nimport { Link } from 'react-router-dom';\nimport User from '../User/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    user,\n    loading: userloading\n  } = useSelector(state => state.like);\n  const {\n    loading,\n    error,\n    posts\n  } = useSelector(state => state.myPost);\n  const {\n    error: likeError,\n    message,\n    loading: deleteLoading\n  } = useSelector(state => state.like);\n  const [followersToggle, setFollowersToggle] = useState(false);\n  const [followingToggle, setFollowingToggle] = useState(false);\n  const deleteHandler = async () => {\n    await dispatch(deleteProfile());\n  };\n  useEffect(() => {\n    dispatch(myAllPosts());\n  }, [dispatch]);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch({\n        type: \"clearErrors\"\n      });\n    }\n    if (likeError) {\n      alert.error(likeError);\n      dispatch({\n        type: 'clearErrors'\n      });\n    }\n    if (message) {\n      alert.success(message);\n      dispatch({\n        type: 'clearMessage'\n      });\n    }\n  }, [alert, error, likeError, message, dispatch]);\n  return loading === true || userloading === true ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 44\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountLeft\",\n      children: posts && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        postId: post._id,\n        caption: post.caption,\n        postImage: post.imageUrl.url,\n        likes: post.likes,\n        comments: post.comments,\n        ownerImage: post.owner.avatar.url,\n        ownerName: post.owner.name,\n        ownerId: post.owner._id,\n        isDelete: true,\n        isAccount: true\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 26\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        margin: \"2vmax\",\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountright\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user.avatar.url,\n        sx: {\n          height: \"7vmax\",\n          width: \"7vmax\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        marginTop: \"1vmax\",\n        color: '#3B3B3B',\n        marginBottom: \"2vmax\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"a\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFollowingToggle(!followingToggle),\n          children: [\"Following \", user.following.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"a\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFollowersToggle(!followersToggle),\n          children: [\"Followers \", user.followers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"a\",\n        children: [\"Posts \", user.posts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: logOutHandler,\n        children: \"logOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/update/profile\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/update/password\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: deleteLoading,\n        style: {\n          color: \"red\",\n          marginTop: \"1vmax\"\n        },\n        onClick: deleteHandler,\n        children: \"Delete My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: followersToggle,\n        onClose: () => {\n          setFollowersToggle(!followersToggle);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogBox\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 28\n          }, this), user && user.followers.length > 0 ? user.followers.map(follower => /*#__PURE__*/_jsxDEV(User, {\n            name: follower.name,\n            avatar: follower.avatar.url,\n            userId: follower._id\n          }, follower._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 31\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              margin: '2vmax'\n            },\n            children: \"No Followers present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: followingToggle,\n        onClose: () => {\n          setFollowingToggle(!followingToggle);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogBox\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 28\n          }, this), user && user.following.length > 0 ? user.following.map(follow => /*#__PURE__*/_jsxDEV(User, {\n            name: follow.name,\n            avatar: follow.avatar.url,\n            userId: follow._id\n          }, follow._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 31\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              margin: '2vmax'\n            },\n            children: \"No Following present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"lbZtUa6S9+fy6u9yPAqHEuplkIA=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector, useSelector];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","LogOutUser","allUsers","deleteProfile","loadUser","myAllPosts","postOfFollowing","Loader","Post","Avatar","Button","Dialog","Typography","useAlert","Link","User","jsxDEV","_jsxDEV","UserProfile","_s","dispatch","alert","user","loading","userloading","state","like","error","posts","myPost","likeError","message","deleteLoading","followersToggle","setFollowersToggle","followingToggle","setFollowingToggle","deleteHandler","type","success","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","post","postId","_id","caption","postImage","imageUrl","url","likes","comments","ownerImage","owner","avatar","ownerName","name","ownerId","isDelete","isAccount","variant","margin","src","sx","height","width","marginTop","color","marginBottom","onClick","following","followers","logOutHandler","to","disabled","style","open","onClose","follower","userId","follow","_c","$RefreshReg$"],"sources":["C:/MERN/Social_media/frontend/src/Components/UserProfile/UserProfile.jsx"],"sourcesContent":["// import { Avatar, Button, Dialog, Typography } from '@mui/material';\r\n// import React, { useEffect, useState } from 'react'\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import Post from '../Post/Post';\r\n// import Loader from '../Loader/Loader';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useAlert } from 'react-alert';\r\n// import User from '../User/User';\r\n// import { getUserProfile} from '../../Actions/Users';\r\n\r\n// const UserProfile = () => {\r\n//   const dispatch=useDispatch();\r\n//   const alert=useAlert();\r\n\r\n//   const {user,loading:userloading}=useSelector(state=>state.user);\r\n//   const {userProfile,loading:userProfileloading}=useSelector(state=>state.like);\r\n//   const {loading,error,posts}=useSelector(state=>state.myPost);\r\n//   const {error:likeError,message,loading: deleteLoading,}=useSelector(state=>state.like);\r\n//   const [followersToggle,setFollowersToggle]=useState(false);\r\n//   const [followingToggle,setFollowingToggle]=useState(false);\r\n//   const [following,setFollowing]=useState(false);\r\n//   const [isProfile,setIsProfile]=useState(false);\r\n  \r\n//   const params=useParams();\r\n\r\n//   useEffect(() => {\r\n//       if(user._id===params.id){\r\n//            setIsProfile(true)\r\n//       }\r\n  \r\n//       dispatch(getUserProfile(params.id))\r\n//   }, [dispatch,user.id,params.id])\r\n    \r\n\r\n//     useEffect(() => {\r\n//          if(error){\r\n//           alert.error(error);\r\n//           dispatch({\r\n//              type:\"clearErrors\"\r\n//           })\r\n//          }\r\n//          if(likeError){\r\n//             alert.error(likeError)\r\n//             dispatch({\r\n//                 type:'clearErrors'\r\n//             })\r\n//          }\r\n//          if(message){\r\n//             alert.success(message)\r\n//             dispatch({\r\n//                 type:'clearMessage'\r\n//             })\r\n//          }\r\n//     }, [alert,error,likeError,message,dispatch])\r\n  \r\n//   return (\r\n//       loading===true || userloading===true?<Loader/>:(\r\n//         <div className='account'>\r\n//               <div className='accountLeft'>\r\n//                      {\r\n//                     posts && posts.length>0?posts.map((post)=>(\r\n//                          <Post  \r\n//                                 key={post._id}\r\n//                                 postId={post._id}\r\n//                                 caption={post.caption}\r\n//                                 postImage={post.imageUrl.url}\r\n//                                 likes = {post.likes}\r\n//                                 comments = {post.comments}\r\n//                                 ownerImage={post.owner.avatar.url}\r\n//                                 ownerName={post.owner.name}\r\n//                                 ownerId={post.owner._id}\r\n//                                 isDelete = {true}\r\n//                                 isAccount = {true}\r\n//                          />\r\n//                     )):<Typography variant='h6' margin='2vmax'>No posts available</Typography>\r\n//                   }\r\n//               </div>\r\n//               <div className='accountright'>\r\n//                    <Avatar src={userProfile.avatar.url}  sx={{height:\"7vmax\",width:\"7vmax\"}} marginTop={\"2vmax\"}/>\r\n//                    <Typography variant=\"h6\" marginTop={\"1vmax\"} color={'#3B3B3B'} marginBottom={\"2vmax\"}>{userProfile.name}</Typography>\r\n//                    <div className='a'>\r\n//                       <button onClick={()=>setFollowingToggle(!followingToggle)}>Following {user.following.length}</button>\r\n//                    </div>\r\n//                     <div className='a'>\r\n//                       <button onClick={()=>setFollowersToggle(!followersToggle)}>Followers {user.followers.length}</button>\r\n//                    </div>\r\n//                     <div className='a'>\r\n//                        Posts {userProfile.posts.length}\r\n//                    </div>\r\n//                   {\r\n//                     isProfile?null: <Button variant=\"contained\" onClick={()=>setFollowing(!following)} style={{backgroundColor:following?\"red\":\"\"}}>{\r\n//                        following?\"UnFollow\":\"Follow\"\r\n//                    }</Button>\r\n//                   }\r\n\r\n//                     {/* DialogBox for followers */}\r\n//                     <Dialog open={followersToggle} onClose={() => { setFollowersToggle(!followersToggle) }}>\r\n//                         <div className='dialogBox'>\r\n//                            <Typography variant='h6'>Followers</Typography>\r\n//                     {\r\n//                          user && user.followers.length>0?user.followers.map((follower)=>(\r\n//                               <User key={follower._id} name={follower.name} avatar={follower.avatar.url} userId={follower._id} />\r\n//                          )):<Typography style={{margin:'2vmax'}}>No Followers present</Typography>\r\n//                     }\r\n//                 </div>\r\n//             </Dialog>\r\n\r\n//              {/* DialogBox for following */}\r\n//                     <Dialog open={followingToggle} onClose={() => { setFollowingToggle(!followingToggle) }}>\r\n//                         <div className='dialogBox'>\r\n//                            <Typography variant='h6'>Following</Typography>\r\n//                     {\r\n//                          user && user.following.length>0?user.following.map((follow)=>(\r\n//                               <User key={follow._id} name={follow.name} avatar={follow.avatar.url} userId={follow._id} />\r\n//                          )):<Typography style={{margin:'2vmax'}}>User has not made any posts</Typography>\r\n//                     }\r\n//                 </div>\r\n//             </Dialog>\r\n//               </div>\r\n//         </div>\r\n//       )\r\n//   )\r\n// }\r\n\r\n\r\n\r\nimport React,{useEffect, useState} from 'react';\r\nimport '../Account/Account.css';\r\nimport '../Post/Post.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { LogOutUser, allUsers, deleteProfile, loadUser, myAllPosts, postOfFollowing } from '../../Actions/Users';\r\nimport Loader from '../Loader/Loader';\r\nimport Post from '../Post/Post';\r\nimport { Avatar, Button, Dialog, Typography } from '@mui/material';\r\nimport { useAlert } from 'react-alert';\r\nimport { Link } from 'react-router-dom';\r\nimport User from '../User/User';\r\n\r\nconst UserProfile = () => {\r\n\r\n  const dispatch=useDispatch();\r\n  const alert=useAlert();\r\n\r\n  const {user,loading:userloading}=useSelector(state=>state.like);\r\n  const {loading,error,posts}=useSelector(state=>state.myPost);\r\n  const {error:likeError,message,loading: deleteLoading,}=useSelector(state=>state.like);\r\n  const [followersToggle,setFollowersToggle]=useState(false);\r\n  const [followingToggle,setFollowingToggle]=useState(false);\r\n\r\n\r\n  const deleteHandler=async()=>{\r\n       await dispatch(deleteProfile())\r\n  }\r\n   \r\n    useEffect(() => {\r\n           dispatch(myAllPosts());\r\n     }, [dispatch])\r\n\r\n    useEffect(() => {\r\n         if(error){\r\n          alert.error(error);\r\n          dispatch({\r\n             type:\"clearErrors\"\r\n          })\r\n         }\r\n         if(likeError){\r\n            alert.error(likeError)\r\n            dispatch({\r\n                type:'clearErrors'\r\n            })\r\n         }\r\n         if(message){\r\n            alert.success(message)\r\n            dispatch({\r\n                type:'clearMessage'\r\n            })\r\n         }\r\n    \r\n    }, [alert,error,likeError,message,dispatch])\r\n  \r\n  return (\r\n      loading===true || userloading===true?<Loader/>:(\r\n        <div className='account'>\r\n              <div className='accountLeft'>\r\n                     {\r\n                    posts && posts.length>0?posts.map((post)=>(\r\n                         <Post  \r\n                                key={post._id}\r\n                                postId={post._id}\r\n                                caption={post.caption}\r\n                                postImage={post.imageUrl.url}\r\n                                likes = {post.likes}\r\n                                comments = {post.comments}\r\n                                ownerImage={post.owner.avatar.url}\r\n                                ownerName={post.owner.name}\r\n                                ownerId={post.owner._id}\r\n                                isDelete = {true}\r\n                                isAccount = {true}\r\n                         />\r\n                    )):<Typography variant='h6' margin='2vmax'>No posts available</Typography>\r\n                  }\r\n              </div>\r\n              <div className='accountright'>\r\n                   <Avatar src={user.avatar.url}  sx={{height:\"7vmax\",width:\"7vmax\"}} />\r\n                   <Typography variant=\"h6\" marginTop={\"1vmax\"} color={'#3B3B3B'} marginBottom={\"2vmax\"}>{user.name}</Typography>\r\n                   <div className='a'>\r\n                      <button onClick={()=>setFollowingToggle(!followingToggle)}>Following {user.following.length}</button>\r\n                   </div>\r\n                    <div className='a'>\r\n                      <button onClick={()=>setFollowersToggle(!followersToggle)}>Followers {user.followers.length}</button>\r\n                   </div>\r\n                    <div className='a'>\r\n                       Posts {user.posts.length}\r\n                   </div>\r\n                   <Button variant=\"contained\"  onClick={logOutHandler}>logOut</Button>\r\n\r\n                   <Link to=\"/update/profile\">Edit Profile</Link>\r\n                   <Link to=\"/update/password\">Change Password</Link>\r\n                   <Button disabled={deleteLoading} style={{color:\"red\",marginTop:\"1vmax\"}} onClick={deleteHandler}>Delete My Profile</Button>\r\n\r\n                    {/* DialogBox for followers */}\r\n                    <Dialog open={followersToggle} onClose={() => { setFollowersToggle(!followersToggle) }}>\r\n                        <div className='dialogBox'>\r\n                           <Typography variant='h6'>Followers</Typography>\r\n                    {\r\n                         user && user.followers.length>0?user.followers.map((follower)=>(\r\n                              <User key={follower._id} name={follower.name} avatar={follower.avatar.url} userId={follower._id} />\r\n                         )):<Typography style={{margin:'2vmax'}}>No Followers present</Typography>\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n\r\n             {/* DialogBox for following */}\r\n                    <Dialog open={followingToggle} onClose={() => { setFollowingToggle(!followingToggle) }}>\r\n                        <div className='dialogBox'>\r\n                           <Typography variant='h6'>Following</Typography>\r\n                    {\r\n                         user && user.following.length>0?user.following.map((follow)=>(\r\n                              <User key={follow._id} name={follow.name} avatar={follow.avatar.url} userId={follow._id} />\r\n                         )):<Typography style={{margin:'2vmax'}}>No Following present</Typography>\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n              </div>\r\n        </div>\r\n      )\r\n  )\r\n}\r\n\r\n\r\nexport default UserProfile;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,OAAO,wBAAwB;AAC/B,OAAO,kBAAkB;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,eAAe,QAAQ,qBAAqB;AAChH,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClE,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAMC,QAAQ,GAACrB,WAAW,EAAE;EAC5B,MAAMsB,KAAK,GAACR,QAAQ,EAAE;EAEtB,MAAM;IAACS,IAAI;IAACC,OAAO,EAACC;EAAW,CAAC,GAACxB,WAAW,CAACyB,KAAK,IAAEA,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}