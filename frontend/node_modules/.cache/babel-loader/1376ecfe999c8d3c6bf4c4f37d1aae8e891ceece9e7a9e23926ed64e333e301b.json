{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\Social_media\\\\frontend\\\\src\\\\Components\\\\ResetPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ResetPassword.css';\nimport { Button, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { resetPassword } from '../../Actions/Users';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const {\n    loading,\n    error,\n    message\n  } = useSelector(state => state.like);\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const params = useParams();\n  const passwordHandler = e => {\n    e.preventDefault();\n    dispatch(resetPassword(params.token, newPassword));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch({\n        type: 'clearErrors'\n      });\n    }\n    if (message) {\n      alert.success(message);\n      dispatch({\n        type: 'clearMessage'\n      });\n      setNewPassword('');\n    }\n  }, [loading, error, message, alert]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetPassword\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ResetPasswordForm\",\n      onSubmit: passwordHandler,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          padding: '2vmax',\n          color: 'rgb(82, 83, 82)'\n        },\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => {\n          setNewPassword(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot/password\",\n        children: \"Request another Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: loading,\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n};\n_s(ResetPassword, \"4zPvJjh8cr0yYu6Bwl33FpCXCgQ=\", false, function () {\n  return [useSelector, useDispatch, useAlert, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useState","Button","Typography","useDispatch","useSelector","useAlert","resetPassword","Link","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","loading","error","message","state","like","dispatch","alert","params","passwordHandler","e","preventDefault","token","type","success","className","children","onSubmit","variant","style","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","required","to","disabled","_c","$RefreshReg$"],"sources":["C:/MERN/Social_media/frontend/src/Components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ResetPassword.css';\r\nimport { Button, Typography } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\nimport { resetPassword } from '../../Actions/Users';\r\nimport {Link, useParams} from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n\r\n  const [newPassword,setNewPassword]=useState(\"\");\r\n  const {loading,error,message}=useSelector(state=>state.like)\r\n  const dispatch=useDispatch();\r\n  const alert=useAlert();\r\n  const params=useParams();\r\n  \r\n  const passwordHandler=(e)=>{\r\n      e.preventDefault();\r\n      dispatch(resetPassword(params.token,newPassword));\r\n  }\r\n\r\n   useEffect(() => {\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch({\r\n                type:'clearErrors'\r\n            })\r\n        }\r\n        if(message){\r\n            alert.success(message)\r\n            dispatch({\r\n                type:'clearMessage'\r\n            })\r\n            setNewPassword('')\r\n        }\r\n   }, [loading,error,message,alert])\r\n\r\n  return (\r\n   <div className='resetPassword'>\r\n            <form className='ResetPasswordForm' onSubmit={passwordHandler}>\r\n                <Typography variant='h4' style={{ padding: '2vmax', color: 'rgb(82, 83, 82)' }}>Reset Password</Typography>\r\n                <input type=\"password\" placeholder='New Password' value={newPassword} onChange={(e) => { setNewPassword(e.target.value) }} required />\r\n                <Link to=\"/\">Login</Link>\r\n                <Typography>Or</Typography>\r\n                <Link to=\"/forgot/password\">Request another Token</Link>\r\n                <Button disabled={loading} type=\"submit\">Reset Password</Button>\r\n            </form>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAC5B,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAAQC,IAAI,EAAEC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM;IAACe,OAAO;IAACC,KAAK;IAACC;EAAO,CAAC,GAACb,WAAW,CAACc,KAAK,IAAEA,KAAK,CAACC,IAAI,CAAC;EAC5D,MAAMC,QAAQ,GAACjB,WAAW,EAAE;EAC5B,MAAMkB,KAAK,GAAChB,QAAQ,EAAE;EACtB,MAAMiB,MAAM,GAACd,SAAS,EAAE;EAExB,MAAMe,eAAe,GAAEC,CAAC,IAAG;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBL,QAAQ,CAACd,aAAa,CAACgB,MAAM,CAACI,KAAK,EAACb,WAAW,CAAC,CAAC;EACrD,CAAC;EAEAd,SAAS,CAAC,MAAM;IACX,IAAGiB,KAAK,EAAC;MACLK,KAAK,CAACL,KAAK,CAACA,KAAK,CAAC;MAClBI,QAAQ,CAAC;QACLO,IAAI,EAAC;MACT,CAAC,CAAC;IACN;IACA,IAAGV,OAAO,EAAC;MACPI,KAAK,CAACO,OAAO,CAACX,OAAO,CAAC;MACtBG,QAAQ,CAAC;QACLO,IAAI,EAAC;MACT,CAAC,CAAC;MACFb,cAAc,CAAC,EAAE,CAAC;IACtB;EACL,CAAC,EAAE,CAACC,OAAO,EAACC,KAAK,EAACC,OAAO,EAACI,KAAK,CAAC,CAAC;EAElC,oBACCX,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,eACrBpB,OAAA;MAAMmB,SAAS,EAAC,mBAAmB;MAACE,QAAQ,EAAER,eAAgB;MAAAO,QAAA,gBAC1DpB,OAAA,CAACR,UAAU;QAAC8B,OAAO,EAAC,IAAI;QAACC,KAAK,EAAE;UAAEC,OAAO,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAkB,CAAE;QAAAL,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC3G7B,OAAA;QAAOiB,IAAI,EAAC,UAAU;QAACa,WAAW,EAAC,cAAc;QAACC,KAAK,EAAE5B,WAAY;QAAC6B,QAAQ,EAAGlB,CAAC,IAAK;UAAEV,cAAc,CAACU,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAC;QAAC,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtI7B,OAAA,CAACH,IAAI;QAACsC,EAAE,EAAC,GAAG;QAAAf,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACzB7B,OAAA,CAACR,UAAU;QAAA4B,QAAA,EAAC;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC3B7B,OAAA,CAACH,IAAI;QAACsC,EAAE,EAAC,kBAAkB;QAAAf,QAAA,EAAC;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACxD7B,OAAA,CAACT,MAAM;QAAC6C,QAAQ,EAAE/B,OAAQ;QAACY,IAAI,EAAC,QAAQ;QAAAG,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd,CAAC;AAAA3B,EAAA,CAzCKD,aAAa;EAAA,QAGaP,WAAW,EAC1BD,WAAW,EACdE,QAAQ,EACPG,SAAS;AAAA;AAAAuC,EAAA,GANlBpC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}