{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN\\\\Social_media\\\\frontend\\\\src\\\\Components\\\\CommentCard\\\\CommentCard.jsx\",\n  _s = $RefreshSig$();\nimport { Typography } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CommentCard.css';\nimport { Delete } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myAllPosts, postOfFollowing } from '../../Actions/Users';\nimport { deleteComment } from '../../Actions/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentCard = _ref => {\n  _s();\n  let {\n    userId,\n    name,\n    avatar,\n    comment,\n    commentId,\n    postId,\n    isAccount\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const deleteCommentHandler = () => {\n    dispatch(deleteComment(postId, commentId));\n    if (isAccount) {\n      console.log(\"Bring me my profile\");\n      dispatch(myAllPosts());\n    } else {\n      dispatch(postOfFollowing());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentUser\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/${userId}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          minWidth: \"auto\",\n          marginRight: \"1vmax\"\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"comment\",\n      children: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), isAccount ? /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        color: \"red\"\n      },\n      onClick: deleteCommentHandler,\n      children: /*#__PURE__*/_jsxDEV(Delete, {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this) : userId === user._id ? /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        color: \"red\"\n      },\n      onClick: deleteCommentHandler,\n      children: /*#__PURE__*/_jsxDEV(Delete, {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 55\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentCard, \"FUGwOHTRI+DmOFaBIVBGv8hjKds=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentCard;\nexport default CommentCard;\nvar _c;\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"names":["Typography","React","Link","Delete","Button","useDispatch","useSelector","myAllPosts","postOfFollowing","deleteComment","jsxDEV","_jsxDEV","CommentCard","_ref","_s","userId","name","avatar","comment","commentId","postId","isAccount","dispatch","user","state","deleteCommentHandler","console","log","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","minWidth","marginRight","color","onClick","_id","_c","$RefreshReg$"],"sources":["C:/MERN/Social_media/frontend/src/Components/CommentCard/CommentCard.jsx"],"sourcesContent":["import { Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommentCard.css';\r\nimport { Delete} from '@mui/icons-material';\r\nimport {Button} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { myAllPosts, postOfFollowing } from '../../Actions/Users';\r\nimport { deleteComment } from '../../Actions/Post';\r\n\r\nconst CommentCard = ({\r\n    userId,\r\n    name,\r\n    avatar,\r\n    comment,\r\n    commentId,\r\n    postId,\r\n    isAccount\r\n}) => {\r\n   \r\n  const dispatch=useDispatch(); \r\n  const { user } = useSelector(state => state.user);\r\n  \r\n  const deleteCommentHandler=()=>{\r\n        dispatch(deleteComment(postId,commentId));\r\n        if (isAccount) {\r\n            console.log(\"Bring me my profile\");\r\n            dispatch(myAllPosts());\r\n        } else {\r\n            dispatch(postOfFollowing());\r\n        }\r\n  }\r\n\r\n  return (\r\n    <div className='commentUser'>\r\n        <Link to={`/user/${userId}`}>\r\n            <img src={avatar} alt={name}/>\r\n            <Typography style={{minWidth:\"auto\",marginRight:\"1vmax\"}}>{name}</Typography>\r\n        </Link>\r\n        <Typography className='comment'>{comment}</Typography>\r\n            {\r\n                isAccount?<Button style={{color:\"red\"}} onClick={deleteCommentHandler}>\r\n                                <Delete color='red'/>\r\n                          </Button>:userId===user._id?<Button style={{color:\"red\"}} onClick={deleteCommentHandler}>\r\n                                                          <Delete color='red'/>\r\n                                                      </Button>:null\r\n            }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}